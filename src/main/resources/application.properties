spring.application.name=rating-service
server.port=8083

# PostgreSQL Connection Configuration
spring.datasource.driverClassName=org.postgresql.Driver
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://${DB_URL:localhost}:7083/rating_service
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.initialize=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#keycloak
keycloak.realm=devops
keycloak.auth-server-url=http://localhost:18080/
#use external in production
keycloak.ssl-required=none
#name of the client
keycloak.resource=spring-boot-client
keycloak.credentials.secret=oU8oEqNDNYZ2O96sWaD2IZtTFkrJm5RT
keycloak.use-resource-role-mappings=true

## authentication
spring.security.oauth2.client.registration.keycloak.client-id=spring-boot-client
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:18080/realms/devops
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/realms/devops

ribbon.eureka.enabled=false
reservation-service.ribbon.listOfServers=localhost:8081
accommodation-service.ribbon.listOfServers=localhost:8082

#kafka
spring.kafka.bootstrap-servers=${KAFKA_ADDRESS:localhost:9092}
kafka.bootstrapAddress=${KAFKA_ADDRESS:localhost:29092}


#monitoring
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
management.endpoint.metrics.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

#tracing
tracing.url=http://localhost:4318/v1/traces
management.tracing.sampling.probability=1.0

#logging
logging.pattern.level="%5p [${spring.application.name:}, %X{traceId:-},%X{spanId:-}]"
logging.logstash.enabled=true
logging.logstash.host=${LOGSTASH_DESTINATION:localhost}
logging.logstash.port=5000

logging.logstash.encoder.providers=mdc,context,logLevel,loggerName,pattern,threadName,message,logstashMarkers,stackTrace
logging.logstash.encoder.pattern={"app": "rating-service"}

logging.level.root=info
